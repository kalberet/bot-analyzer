name: Deploy Vite to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Patch package-lock.json to drop mac-only Rollup entries so Linux install won't choke
      - name: Patch package-lock for Linux
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const p = 'package-lock.json';
          if (!fs.existsSync(p)) process.exit(0);
          const lock = JSON.parse(fs.readFileSync(p,'utf8'));

          // Helper to recursively delete any keys that match a predicate
          const prune = (obj) => {
            if (!obj || typeof obj !== 'object') return;
            for (const k of Object.keys(obj)) {
              if (typeof obj[k] === 'object' && obj[k] !== null) prune(obj[k]);
              // Remove any darwin-only Rollup platform packages
              if (k.includes('@rollup/rollup-darwin')) delete obj[k];
              // (Optional) If your lock ever contains esbuild darwin blobs too:
              if (k.includes('@esbuild/darwin')) delete obj[k];
            }
          };

          // npm lockfile v3 layout: { packages: {...}, dependencies: {...} }
          if (lock.packages) prune(lock.packages);
          if (lock.dependencies && lock.dependencies['@rollup/rollup-darwin-arm64']) {
            delete lock.dependencies['@rollup/rollup-darwin-arm64'];
          }

          fs.writeFileSync(p, JSON.stringify(lock, null, 2));
          console.log('Patched package-lock.json to remove darwin-only Rollup entries.');
          NODE

      # Use latest npm and install without optional deps
      - run: npm i -g npm@latest
      - run: npm ci --omit=optional || npm install --omit=optional
        env:
          NPM_CONFIG_OPTIONAL: "false"

      - run: npm run build
      - run: cp dist/index.html dist/404.html

      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4